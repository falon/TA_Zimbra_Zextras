[accepted_keys]
amavisValidRecip = amavis_to
PostfixValidSender = from
PostfixValidRecip = to

#===========================================
# Add raw length to Meta Fields
#===========================================
[zimbra_raw_length]
INGEST_EVAL = zimbra_event_length=len(_raw)


#===========================================
# Sourcetype Transforms
#===========================================
[zimbra_sourcetype_postfix]
DEST_KEY = MetaData:Sourcetype
REGEX    = postfix[\/\w+]{1,}\[\d+\]
FORMAT   = sourcetype::zimbra:postfix

[zimbra_sourcetype_amavis]
DEST_KEY = MetaData:Sourcetype
REGEX    = amavis\[\d+\]\:\s+
FORMAT   = sourcetype::zimbra:amavis

[zimbra_sourcetype_mailbox]
DEST_KEY = MetaData:Sourcetype
REGEX    = mailbox:\s+
FORMAT   = sourcetype::zimbra:mailbox

[zimbra_sourcetype_audit]
DEST_KEY = MetaData:Sourcetype
REGEX    = audit:\s+
FORMAT   = sourcetype::zimbra:auditlog

[zimbra_sourcetype_eas]
DEST_KEY = MetaData:Sourcetype
REGEX    = sync:\s+
FORMAT   = sourcetype::zimbra:easlog

#
# Ovverride Host from input event
#
[hostname]
REGEX = ^(?:(?:\d{4}\-\d{2}\-\d{2}T(?:\d{2}\:){2}\d{2}\.\d+\+\d{2}\:\d{2})|\w{3}\s\d{2}\s(?:\d{2}\:){2}\d{2})\s+([^\s]+?)\s+
FORMAT = host::$1
DEST_KEY = MetaData:Host


#========================
# MAILBOX.LOG EXTRACTIONS
#========================
[mailbox_main]
REGEX=\s+(?<mbox_server>[^\s]+?)\s+(?<process>[^:]+?)\:\s+(?<log_level>[^\s]+?)\s+\[(?<thread_name>.+?)(?:\:(?<url>.+?)|)\]\s+\[(?<auth_message>[^\]]+)\]\s+(?<component>[^\-]+?)\s+\-\s+(?<message>.+)

[mailbox_auth]
# If I use DELIMS= fields extracted are not searchable in Fast Mode.
SOURCE_KEY=auth_message
REGEX = ([^\;]+)\=([^=]+)\;
FORMAT = $1::$2

[mailbox_message_detail]
SOURCE_KEY=_raw
REGEX=(?:mailop|smtp) \- (?<action>[^\:\(]+)(?:\:|\s\()

[mailbox_message_uid]
SOURCE_KEY=message
REGEX=Message(?:\:\s|\s\()id=(?<mail_id>\d+)(?:\,|\))

[mailbox_folder_name]
SOURCE_KEY=message
REGEX=folderName\=(?<folder>.+)(?:\sacct\=|,\sparent)

[mailbox_move_dest_folder_name]
SOURCE_KEY=message
REGEX=to Folder (?<folder>.+?)\s\(id\=

[mailbox_move_orig_folder_name]
SOURCE_KEY=message
REGEX=(?<action>moving Folder)\s(?<orig_folder>.+?)\s\(id\=(?<folder_id>\d+)

[mailbox_folder_delete]
SOURCE_KEY=message
REGEX=(?<action>Deleting Folder)\s(?<folder>.+?)\s\(id\=(?<folder_id>\d+)

[mailbox_mountpoint]
SOURCE_KEY = message
REGEX = (?<action>Adding Mountpoint)\s(?<mountname>[^\b]+): id=\d+, parentId=\d+, parentName=(?<mountparent>[^\b]+)\.
FORMAT = error::"Operation successful"

[mailbox_mountpoint_error]
SOURCE_KEY = _raw
REGEX = CreateMountpointRequest.+SoapEngine - handler exception#012com\.zimbra\..+ServiceException: ([^\#]+)\#012
FORMAT = action::"Adding Mountpoint" error::$1

[mailbox_message_uids]
SOURCE_KEY=message
REGEX=Affected message ids: (?<mail_id>[\d+,]+)

[mailbox_message_purge_uids]
SOURCE_KEY=message
REGEX=Deleting MESSAGES: (?<mail_id>[\d+,]+)

[mailbox_message_authko]
SOURCE_KEY = message
REGEX = ^Error occurred during authentication:.+: (.+)$
FORMAT = login::failed error::"$1"

[mailbox_replyType]
SOURCE_KEY=message
REGEX=^Sending message to MTA.+,\s(?:replyType=(?<rcode>\w)|reason=(?<rtype>[\w\s]+)),?

[mailbox_ooo]
SOURCE_KEY=message
REGEX=^(?<action>outofoffice sent) dest='(?<to>[^']+)' rcpt='(?<sender>[^']+)'

[mailbox_filter_redirect]
SOURCE_KEY=message
REGEX=^(?<action>Redirecting message) to (?<to>.+)\.$

[mailbox_filter_discard]
SOURCE_KEY=message
REGEX=^(?<action>Discarding message).+? from (?<sender>.+)$

[mailbox_target_acct]
SOURCE_KEY=message
REGEX=acct=(?<target_account_id>[^\.]+).$

[mailbox_calendar]
SOURCE_KEY=message
REGEX=^<?(?<action>[^\:>]+)(:|>) id=\d+.+?(?:verb=(?<cal_status>\w+), notifyOrg=(?<cal_notify>\w+)|), subject=\"(?<cal_subject>[^\b]+?)\", UID=(?<cal_id>[^,]+),?

[mailbox_room_id]
SOURCE_KEY=message
REGEX=^(?<target>[^\s]+)\s(?<action>(?:created|subscribed|deleted).+(?i:user(?:_| |)room)) (?<room_id>[\S]+)\s?(?:named (?<room_name>[^$]+))?

[mailbox_meeting]
SOURCE_KEY = message
REGEX = (?:M|m)eeting\s(.+)?\s\(([^)]+)\)\s(created|closed)\son\s
FORMAT = action::$3 meeting_name::$1 meeting_id::$2

[mailbox_meeting_action]
SOURCE_KEY = message
REGEX = ^User\s(?<account_id>[^\s]+)\s\([^\s]+\)\s(?<action>\w+)\s(?<meeting_name>.+)?\s\((?<meeting_id>[^\s]+)\)$ 

[mailbox_instant_meeting]
SOURCE_KEY=message
REGEX=^(?<target>[^\s]+)\s(?<action>\w+\s(?:to)?\s?(?i:instant[_\s]?meeting))\s(?<instant_meeting_id>[^\s]+)$

[mailbox_instant_meeting_remove]
SOURCE_KEY=message
REGEX=^(?<action>Removing room subscription)\s(?<room_id>[^\s]+)\sfrom\s(?<target>[^\s]+)\ssince\s(?<detail>[^$]+)$

[mailbox_conversation]
SOURCE_KEY=message
REGEX=(?<action>created a conversation)\swith\s(?<target>[^$]+)$

[mailbox_lookup_reply]
filename = reply_type.csv

[midlookup]
# This lookup provides
# (mailbox_name) --> (mbox_server, mailbox_id)
external_cmd = name2mid.py mailbox_name mbox_server mailbox_id
fields_list = mbox_server, mailbox_name, mailbox_id
python.version = python3
allow_caching = true

[acctlookup]
# This lookup provides
# account name  <--> account id
external_cmd = acct2name.py account_name account_id
fields_list = account_name account_id
python.version = python3
allow_caching = true

#=========================
# SYNC.LOG.* EXTRACTIONS
#=========================
[zimbra_easlog_folders]
SOURCE_KEY=message
REGEX=^(?!Receiving add message  )(?<action>[^\d:]+)[^\s]*\s(on\s|for\s|to\s)folder[s:\s]+(?!for )(?<eas_folder>.+?)\s?(for |with|$)

[zimbra_easlog_days]
SOURCE_KEY=message
REGEX=Time window used: (?<days>\d+) days\.$

[zimbra_easlog_heartbeat]
SOURCE_KEY=message
REGEX=with an heartbeat of (?<heartbeat>\d+) seconds\.$

[zimbra_easlog_items]
SOURCE_KEY=message
REGEX=^(?<action>.+items)\s(?<item>.+)\sfrom\s\/(?<eas_folder>.+)\sfor\s.+\@.+$

[zimbra_easlog_unable]
SOURCE_KEY=message
REGEX=^(?<action>Unable to synchronize folders) for [\S]+\s(?<detail>.+)

[zimbra_easlog_askserverconf]
SOURCE_KEY=message
REGEX=^(?<action>Device asked server configurations),

[zimbra_easlog_receiving_add]
SOURCE_KEY=message
REGEX=^(?<action>Receiving add message)  for.+(on\s|for\s|to\s)folder[s:\s]+(?!for )(?<eas_folder>.+?)\s?(for |with|$)

[zimbra_easlog_dos]
SOURCE_KEY=_raw
REGEX=Microsoft-Server-ActiveSync.+DeviceType=(?<model>\w+).+(?<action>Blocked looping device) (?<id>[^\s]+)\sowned by\s(?<name>[^\s]+)$


#=========================
# MAILLOG EXTRACTIONS
#=========================
[postfix_main]
REGEX=\s+(?<mta_server>[^\s]+?)\s+postfix\/(?<postfix_process>.+?)\[(?<pid>\d+)\]\:\s+

[postfix_queue_id]
REGEX=\s+postfix[\/\w+]{0,}\[\d+\]\:\s+(?<queue_id>[A-Fa-f0-9]{6,20})

[postfix_proto]
REGEX=[\s|\,]{1,}proto\=(?<proto>\w+)

[postfix_nrcpt]
REGEX=nrcpt\=(?<nrcpt>\d+)

[postfix_size]
REGEX=size\=(?<size>\d+)

[postfix_source_mta]
REGEX=RCPT\s+from\s+?(?:(?<src_host>[^\[]+)\[(?<src_ip>[\d.]+)|(?<src>.*))\]\:

[postfix_delays]
REGEX=delay\=(?<delay>.+?)\,\s+delays\=(?<delays>.+?)\,\s+dsn\=(?<dsn>.+?)\,

[postfix_status_full]
REGEX=status\=\w+\s+\((?<status_full>.*)\)$

[postfix_zqueue_id]
REGEX=queued\s+as(?<zqueue_id>.+?)\)

[postfix_connect_type]
REGEX=(?<connect_type>connect|disconnect)\s+from\s+(?:(?<src_host>[^\[]+)\[(?<src_ip>[\d.]+)|(?<src>.*))

[postfix_smtpd_tls]
REGEX=postfix\/smtpd\[\d+\]\:\s+(?<connect>.+?)(?<connect_direction>to|from)\s+(?<src_host>.+?)\[(?<src_ip>.+?)\]\:\s+(?<tls>TLS.+?)\s+with\s+cipher\s+(?<cipher>.+?)\s+key\-exchange\s+(?<key_exchange>.+?)\s+server\-signature\s+(?<server_signature>.+?)\s+server\-digest\s+(?<server_digest>.+?)$

[postfix_script_msg]
REGEX=postfix-script\[\d+\]\:\s+(?<message>.+)

[postfix_commands]
REGEX=disconnect\s+from\s+.+?\]\s+(?<commands>.+?)$

[postfix_postscreen]
REGEX=postscreen\[\d+\]\:\s+(?<postscreen_action>.+?)\[(?<postscreen_target>.+?)\]\:(?<postscreen_port>.+?)$

[postfix_delivery_status]
REGEX=[Dd]elivery\s+(?<delivery_status>.+?)\)

[postfix_relay]
REGEX=relay=(?:(?<dest_host>[^\[]+)\[(?<dest_ip>[\d.]+)|(?<src>.*))\]\:(?<dest_port>\d+)\,

[postfix_client]
REGEX=\bclient\=(?<src_host>.+?)\[(?<src_ip>.+?)\](?:,\s+\borig_queue_id\=(?<orig_internal_message_id>[^,]+),\s+orig_client\=(?<orig_src_host>.+?)\[(?<orig_src_ip>.+?)\]|)

[lowercase_message_id_key]
# We extract Message-id ad index time in all multivariant keys
# and we lowercase the domain part in order to better correlate it
# with Amavis.
INGEST_EVAL = message_id:=if(match(_raw,"(?i:.*\\sMessage-ID(?:=|\\:?\\s)\\\"?<([^<> ]+)>\\\"?.*)"),replace(_raw,"(?i:.*\\sMessage-ID(?:=|\\:?\\s)\\\"?<([^<> ]+)>\\\"?.*)","\\1"),null()), message_id:=mvindex(split(message_id,"@"),0)."@".lower(mvindex(split(message_id,"@"),-1))

[postfix_angle_brackets]
# Strip out the  '<' or '>' from the value of the postfix log messages.
# Examples:
#   to=<jdoe@aol.com>
#   from=<bob@example.com>
# We later alias from_domain as src_user_domain and to_domain as recipient_domain
SOURCE_KEY = _raw
REGEX = \s(sender|to|from|orig_to|helo)\=\<?((?:[^,>\s\@]+)\@([^\s,>]+)|[^>\s]+)\>?\,?
REPEAT_MATCH = true
WRITE_META = true
FORMAT = $1::"$2" "$1_domain"::$3

[postfix_delays_details_s]
# delay=42, delays=42/0.02/0.06/0.07, dsn
# ... at index time!
SOURCE_KEY = _raw
REGEX = ,\sdelays\=([0-9]+(?:\.[0-9]+)?)\/([0-9]+(?:\.[0-9]+)?)\/([0-9]+(?:\.[0-9]+)?)\/([0-9]+(?:\.[0-9]+)?),\sdsn
WRITE_META = true
FORMAT = postfix_before_qmgr::"$1" postfix_in_qmgr::"$2" postfix_conn_setup::"$3" postfix_tot_txtime::"$4"

[postfix_delays_details_ms]
INGEST_EVAL = postfix_before_qmgr:=postfix_before_qmgr*1000, postfix_in_qmgr:=postfix_in_qmgr*1000, postfix_conn_setup:=postfix_conn_setup*1000, postfix_tot_txtime:=postfix_tot_txtime*1000

[postfix_status]
REGEX=status=(?<status>\w+)\s+(?:(?:\(host\s|$)(?:(?<dest_host>[^\[]+)\[(?<dest_ip>[\d.]+)|(?<dest>.*))\]\s+said\:\s+(?<status_code>\d+)\s+(?<status_code_extended>.+?)\s+\<(?<status_recipient>.+?)\>\:\s+(?<status_message>.+?)\)$|)(?:\((?<status_full>[^)]+)\)|)

[postfix_status_expired]
REGEX=status=(?<status>[^,]+),\s+(?<status_full>[^$]+)

[postfix_relay_full]
REGEX=relay=(?<relay>\w+)\,

[postfix_deferred_temp_suspended]
REGEX=deferred\s+\(delivery\s+(?<delivery_status>[^:]+:\s+connect to\s+(?:(?<dest_host>[^\[]+)\[(?<dest_ip>[\d\.]+)\]\:(?<dest_port>\d+)|(?<dest>.*)):\s+(?<deferred_message>.+?))\)

[postfix_status_ndn]
REGEX=(?<status>sender non-delivery notification):\s+(?<ndn_message_id>[^$]+)$

[postfix_noqueue_reject]
REGEX=(?<status>\w+)\:\s+\w+\sfrom\s[^\[]+\[[^\]]+\]\:[^:]+:\s(?<detail>[^\;]*)\;

[postfix_error]
REGEX=(?<error_class>warning|error|fatal|panic)\:\s(?<error_detail>[^$]+)$

[postfix_dest_lookup]
filename = dest_type.csv
match_type = CIDR(dest_ip)

[postfix_src_lookup]
filename = orig_type.csv
match_type = WILDCARD(mta_server)

#=========================
# AMAVIS EXTRACTIONS
#=========================
[zimbra_amavis_main]
REGEX=amavis\[\d+\]\:\s+\((?<amavis_thread>.+?)\)

[zimbra_amavis_action]
# We don't extract internal msgs like
# amavis[1963702]: (1963702-01) Passed CLEAN {RelayedInbound}, [127.0.0.1] <zimbra@csi.it> -> <zimbra@csi.it>, Message-ID: <20230117234504.3C2011863618@vm-zmb-mtain02.csi.it>, mail_id: lr6hvYgpVqAZ, Hits: -0.701, size: 643, queued_as: C8AE9186362B, 2519 ms
REGEX=amavis\[\d+\]\:\s+\([^\)]+\)\s+(?<action>(?:Passed|Blocked)\s[\-|\w]+)\s+\{(?<actions_performed>[^\}]+)\}\,(?:[^\[]+)\[(?<src_ip>[^]]*)\](?:\:\d+){0,1}(?:\s+\[(?<internal_src_ip>[^]]*)\]|)\s+\<(?:[^>]*)\>\s\-\>\s(?:[^\s]*),\s+(?:quarantine:\s+(?<quarantine_id>[^,]+)\,\s+|)Queue\-ID\:\s+(?<internal_message_id>[A-FB-Zb-z0-9]{9,16}),\s+(?:Message-ID\:\s+<[^>]+>,\s+|)(?:Resent-Message-ID\:\s+<[^>]+>,\s+|)mail_id:\s(?<amavis_id>[^,]+),\s+Hits:\s+(?<Hits>[^,]+),\s+size:\s+(?<size>[^,]+),\s+queued_as:\s+(?<sent_message_id>[^,]+),\s+(?:dkim_sd=(?<dkim_sd>[^\s]+),\s+|)(?<amavis_delay>\d+)\s+ms

[zimbra_amavis_from_to]
SOURCE_KEY = _raw
REGEX=amavis\[\d+\]\:\s+\([^\)]+\)\s+(?:(?:Passed|Blocked)\s[\-\w]+)\s+\{(?:[^\}]+)\}\,(?:[^\[]+)\[(?:[^]]*)\](?:\:\d+){0,1}(?:\s+\[(?:[^]]*)\]|)\s+\<(?:([^,>\s\@]+)\@([^>]+)*)\>\s\-\>\s([^\s]*),\s+
WRITE_META = true
LOOKAHEAD = 32768
FORMAT = from::"$1@$2" amavis_to::"$3" src_user_domain::$2

[zimbra_amavis_to_removedelim]
SOURCE_KEY = field:amavis_to
#REGEX = <([^,>\s]+)+,?\s?
REGEX = <([^,>\s\@]+)+\@([^\s,>]+)>,?\s?
REPEAT_MATCH = true
WRITE_META = true
LOOKAHEAD = 32768
FORMAT = to::"$1@$2" recipient_domain::$2

[zimbra_amavis_process]
REGEX=\s+(?<mta_server>[^\s]+?)\s+(?<process>\w+)\[(?<process_id>[^]]+)\]:\s+\((?<amavis_thread>[^\)]+)\)


#========================
# ZIMBRA.LOG EXTRACTIONS
#========================
[zimbra_zsyslog_main]
REGEX=\s+(?<zimbra_server>[^\s]+?)\s+(?<zimbra_process>.+?)\[(?<pid>.+?)\]\:\s+(?<message>.+?)$


#========================
# AUDIT.LOG EXTRACTIONS
#========================
[zimbra_auditlog_main]
REGEX=\s+(?<mbox_server>[^\s]+?)\s+(?<process>[^:]+?)\:\s+(?<log_level>[^\s]+?)\s+\[(?<thread_name>.+?)(?:\:(?<url>.+?)|)\]\s+\[(?<auth_message>[^\]]+)\]\s+(?<component>[^\-]+?)\s+\-\s+(?<message>.+)

[zimbra_auditlog_auth]
# If I use DELIMS= fields extracted are not searchable in Fast Mode.
SOURCE_KEY=auth_message
REGEX = ([^\;]+)\=([^=]+)\;
FORMAT = $1::$2

[zimbra_auditlog_message]
SOURCE_KEY=message
REGEX = ([^\=\s\;]+?)\=([^\=]+)\;\s?
FORMAT = $1::$2

[zimbra_auditlog_via]
SOURCE_KEY=via
REGEX=(?<orig_src_ip>[^\(]+)\((?<orig_user_agent>.*?)\)$

[zimbra_auditlog_target]
SOURCE_KEY=message
REGEX = name\=(?<target>[^\;]+)\;

[zimbra_auditlog_authok]
SOURCE_KEY = message
REGEX = ^(Successful login request)
FORMAT = login::successful
